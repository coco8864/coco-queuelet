<?xml version="1.0" encoding="Shift_JIS" ?>
<queueApp stopMode="manager" managerPort="9002" checkInterval="60">
  <loader name="main" home="${queuelet.user.home}" delegate="false">
  </loader>

  <terminal name="httpDataPool" threadCount="0">
    <queuelet loaderName="main" type="pool">
      <param name="poolCount" value="128"/>
      <param name="className" value="naru.http.HttpData"/>
      <param name="arg" value="16384"/>
    </queuelet>
  </terminal>

  <!--リクエスト受付端点 -->
  <queuelet type="accept" nextTerminal="receive">
    <param name="port" value="9088"/>
  </queuelet>

  <!--リクエストが途中で途切れた場合に使用 -->
  <terminal name="waitForReceive" threadCount="1" >
    <!--queuelet type="log" /-->
    <queuelet type="receive" nextTerminal="receive">
      <param name="getSocketMethod" value="getSocket"/>
      <param name="timeout" value="0"/>
      <param name="timeoutTerminal" value="close"/>
    </queuelet>
  </terminal>

  <!--リクエストデータの読み込み -->
  <terminal name="receive" threadCount="4">
    <queuelet loaderName="main" className="naru.http.Request">
      <param name="pool" value="httpDataPool"/>
      <param name="complete" value="send"/>
      <param name="incomplete" value="waitForReceive"/>
      <param name="error" value="close"/>
    </queuelet>
  </terminal>

  <!--リクエストから返却するコンテンツを計算 -->
  <!--レスポンス返却 -->
  <terminal name="send" threadCount="32">
    <queuelet loaderName="main" className="naru.http.ProxyResponse" nextTerminal="waitForReceive">
      <param name="close" value="close"/>
      <param name="close" value="close"/>
      <param name="targetServer" value="127.0.0.1"/>
      <param name="targetPort" value="9080"/>
    </queuelet>
  </terminal>

  <terminal name="close" threadCount="4" >
    <!--queuelet type="log" /-->
    <queuelet loaderName="main" className="naru.http.Close" nextTerminal="httpDataPool"/>
  </terminal>
</queueApp>
