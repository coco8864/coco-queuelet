<?xml version="1.0" encoding="Shift_JIS" ?>
<queueApp stopMode="infinity">
  <loader name="main" home="${myProxy.home}" delegate="false">
    <classpath path="${myProxy.debugCP}"/>
  </loader>

  <!--queuelet type="generalJava">
    <param name="className" value="org.hsqldb.Server"/>
    <param name="arg0" value="-port"/>
    <param name="arg1" value="8800"/>
    <param name="arg2" value="-database.0"/>
    <param name="arg3" value="file:${QUEUELET_HOME}/accessLog/accessLog"/>
    <param name="arg4" value="-dbname.0"/>
    <param name="arg5" value="accessLog"/>
    <param name="arg6" value="-no_system_exit"/>
    <param name="arg7" value="true"/>
    <param name="arg8" value="-trace"/>
    <param name="arg9" value="true"/>
    <!-param name="arg" value="-silent"/>
    <param name="arg" value="true"/->
  </queuelet-->

  <terminal name="httpContextPool" threadCount="0">
    <queuelet loaderName="main" type="pool">
      <param name="poolCount" value="64"/>
      <param name="className" value="naru.web.HttpContext"/>
      <param name="arg" value="16384"/>
    </queuelet>
  </terminal>

  <terminal name="accessLogPool" threadCount="0">
    <queuelet loaderName="main" type="pool">
      <param name="poolCount" value="64"/>
      <param name="className" value="naru.web.AccessLog"/>
    </queuelet>
  </terminal>

  <!--リクエスト受付端点 -->
  <queuelet type="accept" nextTerminal="request">
    <param name="port" value="${myProxy.port}"/>
  </queuelet>

  <!--リクエストデータの読み込み -->
  <terminal name="request" threadCount="4">
    <queuelet loaderName="main" className="naru.web.Request">
      <param name="clientIps" value="${myProxy.clientIps}"/>
      <param name="proxyAuthenticate" value="${myProxy.proxyAuthenticate}"/>
      <param name="webserverAuthenticate" value="${myProxy.webserverAuthenticate}"/>
      <param name="webAuthenticateCookieKey" value="${myProxy.webAuthenticateCookieKey}"/>
    </queuelet>
  </terminal>

  <!--レスポンスデータの出力 -->
  <terminal name="response" threadCount="8">
    <queuelet loaderName="main" className="naru.web.Response">
    </queuelet>
  </terminal>

  <!--proxy処理 -->
  <terminal name="proxy" threadCount="8">
    <queuelet loaderName="main" className="naru.web.Proxy">
    </queuelet>
  </terminal>

  <!--replay処理 -->
  <terminal name="replay" threadCount="4">
    <queuelet loaderName="main" className="naru.web.Replay">
    </queuelet>
  </terminal>

  <!--reverseProxy処理 -->
  <terminal name="reverse" threadCount="8">
    <queuelet loaderName="main" className="naru.web.Reverse">
      <param name="trustStore" value="${myProxy.trustStore}"/>
      <param name="trustStorePassword" value="${myProxy.trustStorePassword}"/>
    </queuelet>
  </terminal>

  <!--Web処理 -->
  <terminal name="fileSystem" threadCount="4">
    <queuelet loaderName="main" className="naru.web.FileSystem">
    </queuelet>
  </terminal>

  <!--controller処理 -->
  <terminal name="controller" threadCount="4">
    <queuelet loaderName="main" className="naru.web.Controller">
    </queuelet>
  </terminal>

  <!--velocityPage -->
  <terminal name="velocityPage" threadCount="4" >
    <queuelet loaderName="main" className="naru.web.VelocityPage"/>
  </terminal>

  <!--非同期処理、移出用のファイル作成等 -->
  <terminal name="asyncServicel" threadCount="1" >
    <queuelet loaderName="main" className="naru.web.AsyncService"/>
  </terminal>

  <!--httpContextの終端、再利用処理 -->
  <terminal name="close" threadCount="4" >
    <!--queuelet type="log" /-->
    <queuelet loaderName="main" className="naru.web.Close" nextTerminal="httpContextPool"/>
  </terminal>

  <terminal name="accessLog" threadCount="1" >
    <queuelet loaderName="main" className="naru.web.AccesslogQueuelet"  nextTerminal="accessLogPool"/>
  </terminal>

  <terminal name="peek" threadCount="4" >
    <queuelet loaderName="main" className="naru.web.PeekQueuelet">
      <param name="bufferLength" value="16384"/>
    </queuelet>
  </terminal>

</queueApp>
